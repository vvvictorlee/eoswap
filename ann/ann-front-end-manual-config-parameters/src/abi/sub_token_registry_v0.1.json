{
  "source": {
    "hash": "0x4ff3cff59ae0f13e4813fbe52e14c8b4c14cb526f5a41c9b4555191c2c22c92e",
    "language": "ink! 3.3.0",
    "compiler": "rustc 1.65.0-nightly"
  },
  "contract": {
    "name": "sub_token_registry",
    "version": "0.1.0",
    "authors": [
      "Parity Technologies <admin@parity.io>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [],
          "docs": [
            "Creates a new token registry contract."
          ],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [
        {
          "args": [
            {
              "docs": [],
              "indexed": false,
              "label": "token",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Event emitted when a token added occurs."
          ],
          "label": "TokenAdded"
        },
        {
          "args": [
            {
              "docs": [],
              "indexed": false,
              "label": "token",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Event emitted when a token removed occurs."
          ],
          "label": "TokenRemoved"
        }
      ],
      "messages": [
        {
          "args": [
            {
              "label": "new_owner",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            }
          ],
          "docs": [],
          "label": "transfer_ownership",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 9
          },
          "selector": "0x107e33ea"
        },
        {
          "args": [
            {
              "label": "token",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Method for adding payment token",
            " Only admin",
            " # Fields",
            " token ERC20 token address",
            "",
            " # Errors",
            "",
            " - If  the caller is not  the owner of the contract .    ",
            " - If the `token`  already added.  "
          ],
          "label": "add",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 9
          },
          "selector": "0x4b050ea9"
        },
        {
          "args": [
            {
              "label": "token",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Method for removing payment token",
            " Only admin",
            " # Fields",
            " token ERC20 token address",
            "",
            " # Errors",
            "",
            " - If  the caller is not  the owner of the contract .    ",
            " - If the `token`  does not add.  "
          ],
          "label": "remove",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 9
          },
          "selector": "0xe9c084b2"
        },
        {
          "args": [
            {
              "label": "token",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Get enabled of the specified token",
            " # Return",
            "  enabled  enabled"
          ],
          "label": "enabled",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "bool"
            ],
            "type": 4
          },
          "selector": "0x1414631c"
        },
        {
          "args": [],
          "docs": [
            " Get tokens of the enabled tokens",
            " # Return",
            "  tokens  tokens"
          ],
          "label": "tokens",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Vec"
            ],
            "type": 8
          },
          "selector": "0xa8b5b8ba"
        },
        {
          "args": [],
          "docs": [
            " Get owner",
            " # Return",
            "  owner  owner"
          ],
          "label": "owner",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountId"
            ],
            "type": 1
          },
          "selector": "0xfeaea4fa"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "enabled"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 6
              }
            },
            "name": "tokens"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 1
              }
            },
            "name": "owner"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 1
            },
            {
              "name": "V",
              "type": 4
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 2,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 3
            }
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 2,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 5,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 4
            },
            {
              "name": "V",
              "type": 7
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 8
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 1
            }
          ],
          "path": [
            "BTreeSet"
          ]
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "sequence": {
              "type": 1
            }
          }
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 10
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 11
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 10
            },
            {
              "name": "E",
              "type": 11
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "OnlyOwner"
                },
                {
                  "index": 1,
                  "name": "TokenAlreadyAdded"
                },
                {
                  "index": 2,
                  "name": "TokenNotExist"
                },
                {
                  "index": 3,
                  "name": "NewOwnerIsTheZeroAddress"
                }
              ]
            }
          },
          "path": [
            "sub_token_registry",
            "sub_token_registry",
            "Error"
          ]
        }
      }
    ]
  }
}